" Wrap gitcommit file types at the appropriate length
" filetype indent plugin on

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.

Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-surround'
Plugin 'bling/vim-airline'
" Plugin 'scrooloose/nerdcommenter'
Plugin 'majutsushi/tagbar'
Plugin 'easymotion/vim-easymotion'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'ervandew/supertab'
Plugin 'MPiccinato/wombat256'
Plugin 'fatih/vim-go'
Plugin 'enomsg/vim-haskellConcealPlus'
Plugin 'raichoo/haskell-vim'
" Plugin 'Valloric/YouCompleteMe'
" Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'Yggdroot/indentLine'
Plugin 'Raimondi/delimitMate'
Plugin 'davidhalter/jedi-vim'

" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"""""""""""""""
" 插件配置
"""""""""""""""
" Vundle
set shell=/bin/bash
" Plugin 'powerline/powerline', {'rtp': 'powerline/bindings/vim/'}
" vim-haskellConcealPlus
" SuperTab
let g:SuperTabDefaultCompletionType = "context"
" syntastic
let g:syntastic_mode_map = {
    \ "mode": "active",
    \ "passive_filetypes": ["java", "tex"] }
let g:syntastic_python_python_exec = '/usr/bin/python2'
" airline
set laststatus=2
" plasticboy/vim-markdown
" let g:airline#extensions#tabline#enabled = 1
" indentLine
let g:indentLine_color_term = 239
" let g:indentLine_color_gui = '#A4E57E'
let g:indentLine_char = '|'
" haskell-vim
" let g:haskell_enable_quantification = 1
" let g:haskell_enable_recursivedo = 1
" let g:haskell_enable_arrowsyntax = 1
" let g:haskell_enable_pattern_synonyms = 1
" let g:haskell_enable_typeroles = 1
" let g:haskell_enable_static_pointers = 1
" let g:haskell_indent_if = 3
" let g:haskell_indent_case = 2
" let g:haskell_indent_let = 4
" let g:haskell_indent_where = 6
" Tabular
" set timeout timeoutlen=1000 ttimeoutlen=1000
nmap <Leader>a= :Tabularize / = /<CR>
vmap <Leader>a= :Tabularize / = /<CR>
nmap <Leader>a: :Tabularize /: /<CR>
vmap <Leader>a: :Tabularize /: /<CR>


"""""""""""""""""""""""
" 基本设置
"""""""""""""""""""""""
" 环境
" 设置编码，以支持中文
set fileencodings-=latin1
set fileencodings+=gb18030,big5,latin1

" 排版
set textwidth=78  " 自动换行
" m: 按字符为单位分行
" M: 连接行时，不要插入空格
set formatoptions+=mM
set autoindent

" Tab specific option
set tabstop=8                   "A tab is 8 spaces
set expandtab                   "Always uses spaces instead of tabs
set softtabstop=4               "Insert 4 spaces when tab is pressed
set shiftwidth=4                "An indent is 4 spaces
set shiftround                  "Round indent to nearest shiftwidth multiple

set number
set relativenumber " 相对行号
set noignorecase
set foldlevel=1

""""""""""""""""""
" 主题
""""""""""""""""""
syntax on
colorscheme wombat256
" 当前行高亮
set cursorline
hi CursorLine term=bold cterm=bold ctermbg=black
set cursorcolumn
hi CursorColumn term=bold cterm=bold ctermbg=black
" 显示
set list
set listchars=tab:>\ ,trail:~
" hi SpecialKey ctermbg=black
" set cole=2
" let g:tex_conceal = 'adgms'

" 状态栏
set showcmd " 显示命令
set hlsearch
set incsearch

" 快捷键
" 插入模式
" 跳到行首
imap <C-a> <Esc>I
" 跳到行尾
imap <C-e> <Esc>A
imap <C-p> <Esc>:tabprevious<CR>i
imap <C-n> <Esc>:tabnext<CR>i

" 储存状态信息
set viminfo+=!
" jump to last line when reopen the file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
